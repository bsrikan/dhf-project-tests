buildscript {
  repositories {
     mavenLocal()
	 maven {url 'http://developer.marklogic.com/maven2/'}
  }
  dependencies {
	  classpath "com.marklogic:ml-data-hub:4.0.1"
	  classpath "com.marklogic:marklogic-data-hub:4.0.1"
  }
	  
}

plugins {
    id 'net.saliman.properties' version '1.4.6'   
}

apply plugin: "com.marklogic.ml-data-hub"

repositories {
	mavenLocal()
    jcenter()
    maven {url 'http://developer.marklogic.com/maven2/'}
}

ext.junitPlatformVersion = '1.0.0'
ext.junitJupiterVersion  = '5.0.0'

dependencies {
    compile 'com.marklogic:marklogic-data-hub:4.0.1'
    compile 'com.marklogic:marklogic-xcc:9.0.4'
    compile("com.marklogic:mlcp-util:0.9.0")
    compile("com.marklogic:mlcp:9.0.7") {
        exclude group: 'org.apache.avro', module: 'avro-tools'
    }
    // JUnit Jupiter API and TestEngine implementation
    testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"

    testCompile "org.junit.platform:junit-platform-runner:${junitPlatformVersion}"
    // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
    testRuntime "org.junit.platform:junit-platform-launcher:${junitPlatformVersion}"

    testCompile 'xmlunit:xmlunit:1.3'
    testCompile 'org.skyscreamer:jsonassert:1.5.0'
    testCompile 'org.hamcrest:hamcrest-junit:2.0.0.0'
    testCompile 'org.easymock:easymock:3.4'
    testCompile 'ch.qos.logback:logback-classic:1.1.11'
    testCompile 'org.slf4j:log4j-over-slf4j:1.7.13'
}
test{
	dependsOn 'install'
}

task install(type:Exec) {
	commandLine './gradlew', 'mlDeploy'
}

task tearDown(type:Exec) {
	commandLine './gradlew', 'mlUnDeploy', '-PConfirm=true'
}

test.finalizedBy(tearDown)
